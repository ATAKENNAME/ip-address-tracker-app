{"version":3,"sources":["components/Header.js","components/SearchDisplay.js","components/Map.js","components/App.js","index.js"],"names":["Header","id","src","alt","SearchDisplay","props","Container","type","className","onChange","e","handleInput","placeholder","Button","variant","onClick","handleClick","icon","faAngleRight","Row","Col","xs","md","displayInfo","ipAddress","city","region","postalCode","timeZone","isp","Map","myIcon","L","iconUrl","iconSize","iconAnchor","shadowUrl","ChangeMapView","coords","map","useMap","setView","getZoom","MapContainer","center","mapLocation","lat","lng","zoom","scrollWheelZoom","console","log","TileLayer","attribution","url","Marker","position","App","useState","ipInput","setipInput","info","setInfo","target","value","fetch","then","res","json","result","ip","location","timezone","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6a4b189.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n        <div id=\"header\">\n            <h1 id=\"header-text\">IP Address Track</h1>\n            <img id=\"header-bg\" src=\"images/pattern-bg.png\" alt=\"background img\" />\n        </div>\n    )\n\n}\n\nexport default Header;\n\n///most style issues","import React from 'react';\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons'\n\n\n\nfunction SearchDisplay(props) {\n\n    return (\n        <div id=\"searchDisplayContainer\">\n            <Container id=\"SearchContainer\">\n                <input type=\"search\" id=\"searchBar\" className=\"form-control\" onChange={(e) => props.handleInput(e)} placeholder=\"Enter Your IP Address Here\" />\n                <Button id=\"searchBtn\" type=\"button\" className=\"searchBarBtn btn\" variant=\"dark\" onClick={() => props.handleClick()} >\n                    <FontAwesomeIcon icon={faAngleRight} />\n                </Button>\n            </Container>\n            <Container id=\"diplayContainer\">\n                <Row>\n                    <Col xs={12} md={3} className=\"text-box box1\">\n                        <span className=\"title\">IP ADDRESS</span>\n                        <p className=\"result\">{props.displayInfo.ipAddress}</p>\n                    </Col>\n                    <Col xs={12} md={3} className=\"text-box box2\">\n                        <span className=\"title\">LOCATION</span>\n                        <p className=\"result\">{props.displayInfo.city + \", \"}{props.displayInfo.region}{\"  \" + props.displayInfo.postalCode}</p>\n                    </Col>\n                    < Col xs={12} md={3} className=\"text-box box3\">\n                        <span className=\"title\">TIMEZONE</span>\n                        <p className=\"result\">UTC {props.displayInfo.timeZone}</p>\n                    </Col>\n                    < Col xs={12} md={3} className=\"text-box box4\">\n                        <span className=\"title\">ISP</span>\n                        <p className=\"result\">{props.displayInfo.isp}</p>\n                    </Col>\n                </Row>\n            </Container>\n        </div >\n    )\n}\n\n\nexport default SearchDisplay;","import React from 'react';\nimport L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css'\nimport { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\n\n\nfunction Map(props) {\n    // const position = [51.505, -0.09]\n    var myIcon = L.icon({\n        iconUrl: 'images/icon-location.svg',\n        iconSize: [40, 50],\n        iconAnchor: null,\n        shadowUrl: null,\n\n    });\n\n    function ChangeMapView({ coords }) {\n        const map = useMap();\n        map.setView(coords, map.getZoom());\n\n        return null;\n    }\n    return (\n\n        <MapContainer id=\"map\" center={[props.mapLocation.lat, props.mapLocation.lng]} zoom={13} scrollWheelZoom={false} >\n            { console.log(props.mapLocation.lat, props.mapLocation.lng)}\n            < TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <ChangeMapView coords={props.mapLocation} />\n            <Marker position={[props.mapLocation.lat, props.mapLocation.lng]} icon={myIcon}>\n                {/* <Popup>\n                        A pretty CSS3 popup. <br /> Easily customizable.\n      </Popup> */}\n            </Marker>\n        </MapContainer >\n    )\n}\n\n\nexport default Map;","import React, { useState } from 'react';\nimport Header from \"./Header\";\nimport SearchDisplay from \"./SearchDisplay\";\nimport Map from \"./Map\"\n\nfunction App() {\n\n  const api_url = \"https://geo.ipify.org/api/v1?apiKey=at_mypl9PF26wwqAcR8xJi6FfXfE4f12&ipAddress=\"\n  // const version = \"v1\"\n  const [ipInput, setipInput] = useState(\"8.8.8.8\")\n  let url;\n\n  const [info, setInfo] = useState({\n    ipAddress: \"8.8.8.8\",\n    city: \"Mountain View\",\n    region: \"Califonia\",\n    postalCode: \"94035\",\n    lat: 37.38605,\n    lng: -122.08385,\n    timeZone: \"-07:00\",\n    isp: \"Google LLC\"\n  })\n\n  function handleInput(e) {\n    console.log(\"handlerUserInput called\", e.target.value)\n    setipInput(e.target.value)\n  }\n\n  function fetchData() {\n    url = api_url + ipInput;\n    console.log(\"url in handle Click\", url, typeof (url))\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result, \"result\")\n          setInfo({\n            ipAddress: result.ip,\n            city: result.location.city,\n            region: result.location.region,\n            postalCode: result.location.postalCode,\n            lat: result.location.lat,\n            lng: result.location.lng,\n            timeZone: result.location.timezone,\n            isp: result.isp,\n          })\n        },\n        (error) => {\n          console.log(error, \"error\")\n        }\n      )\n  }\n\n\n\n  return <div>\n    <Header />\n    <SearchDisplay handleInput={handleInput} handleClick={fetchData} displayInfo={info} />\n    <Map mapLocation={info} />\n  </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"leaflet/dist/leaflet.css\";\n\nReactDOM.render(< App />, document.getElementById('root'));"],"sourceRoot":""}